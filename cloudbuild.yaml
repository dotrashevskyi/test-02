steps:
  # Run linter for go project
  - name: golang:1.16
    env: ['GO111MODULE=off']
    args: ['go', 'vet', './src/...']

  #Calculate Docker image tag
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "dev" && -z "$TAG_NAME" ]] 
        then
          dateOfImage=$(date '+%d-%m-%Y')
          tag=":$BRANCH_NAME-${dateOfImage}-$SHORT_SHA"
          echo "Running on default branch '$BRANCH_NAME': tag = '${tag}'"
        else
          tag=":$TAG_NAME"
          echo "Running on branch '$BRANCH_NAME': tag = $tag"
        fi
        echo $tag > /image_info_volume/file
    volumes:
      - name: tag-info
        path: '/image_info_volume'

    #Docker build & push
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        tag=$(cat /image_info_volume/file)
        docker build --file Dockerfile --tag ${_IMAGE_REPO_NAME}${tag} --build-arg VERSION=${tag} . &&
        docker push ${_IMAGE_REPO_NAME}${tag}
    volumes:
      - name: tag-info
        path: '/image_info_volume'

#  #Deploy container
#  - name: 'gcr.io/cloud-builders/gcloud'
#    entrypoint: /bin/bash
#    args:
#      - '-c'
#      - |
#        tag=$(cat /image_info_volume/file)
#        gcloud compute ssh --zone ${_VM_ZONE_NAME} ${_VM_INSTANCE_NAME} --project $PROJECT_ID --command "docker system prune -f -a;
#        docker stop ${_CONTAINER_NAME};
#        docker run --rm -d -p ${_CONTAINER_PORT}:${_CONTAINER_PORT} --name=${_CONTAINER_NAME} '${_IMAGE_REPO_NAME}${tag}'"
#    volumes:
#      - name: tag-info
#        path: '/image_info_volume'

    #Deploy to GKE
  - name: 'gcr.io/cloud-builders/gke-deploy'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        tag=$(cat /image_info_volume/file)
        gke-deploy run -f 'deployment-$BRANCH_NAME.yaml' -i ${_IMAGE_REPO_NAME}${tag} -a test-go-app-$BRANCH_NAME -v 1.0.0 -o expanded -c ${_CLUSTER_NAME} -l ${_VM_ZONE_NAME}
        gke-deploy run -f 'service-$BRANCH_NAME.yaml'
    volumes:
      - name: tag-info
        path: '/image_info_volume'

  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        kubectl create clusterrolebinding cluster-admin-binding \
        --clusterrole cluster-admin \
        --user $(gcloud config get-value account)
        kubectl apply -f 'https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml'
        kubectl wait --namespace ingress-nginx \
        --for=condition=ready pod \
        --selector=app.kubernetes.io/component=controller \
        --timeout=120s
        kubectl apply -f 'ingress-$BRANCH_NAME.yaml'

substitutions:
  _VM_ZONE_NAME: 'europe-west6-b'
  _VM_INSTANCE_NAME: 'terraform-instance'
  _CLUSTER_NAME: 'internship-166-375809-prod-gke'
  _CONTAINER_PORT: '8000'
  _CONTAINER_NAME: 'test-go-app'
  _IMAGE_REPO_NAME: 'us-central1-docker.pkg.dev/${PROJECT_ID}/internship-repo/test-go-app'