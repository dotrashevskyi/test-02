steps:
  # Run linter for go project
  - name: golang:1.16
    env: ['GO111MODULE=off']
    args: ['go', 'vet', './...']

  #Calculate Docker image tag
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "dev" && -z "$TAG_NAME" ]] 
        then
          dateOfImage=$(date '+%d-%m-%Y')
          tag=":$BRANCH_NAME-${dateOfImage}-$SHORT_SHA"
          echo "Running on default branch '$BRANCH_NAME': tag = '${tag}'"
        else
          tag=":$TAG_NAME"
          echo "Running on branch '$BRANCH_NAME': tag = $tag"
        fi
        echo $tag > /image_info_volume/file
    volumes:
      - name: tag-info
        path: '/image_info_volume'

    #Docker build & push
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        tag=$(cat /image_info_volume/file)
        docker build --file Dockerfile --tag ${_IMAGE_REPO_NAME}${tag} --build-arg VERSION=${tag} . &&
        docker push ${_IMAGE_REPO_NAME}${tag}
    volumes:
      - name: tag-info
        path: '/image_info_volume'

  #Deploy container
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        tag=$(cat /image_info_volume/file)
        gcloud compute ssh --zone us-central1-a internship-test-instance --project $PROJECT_ID --command "docker system prune -f -a;
        docker stop ${_CONTAINER_NAME};
        docker run --rm -d -p ${_CONTAINER_PORT}:${_CONTAINER_PORT} --name=${_CONTAINER_NAME} '${_IMAGE_REPO_NAME}${tag}'"
    volumes:
      - name: tag-info
        path: '/image_info_volume'

substitutions:
  _CONTAINER_PORT: '8000'
  _CONTAINER_NAME: 'test-go-app'
  _IMAGE_REPO_NAME: 'us-central1-docker.pkg.dev/${PROJECT_ID}/internship-repo/test-go-app'